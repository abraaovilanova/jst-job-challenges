[{"C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\index.js":"1","C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\App.js":"2","C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\Dropdown\\Dropdown.jsx":"3","C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\Dropdown\\Card\\Card.jsx":"4","C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\lib\\commerce.js":"5","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\index.js":"6","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\App.js":"7","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\lib\\commerce.js":"8","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Dropdown\\Dropdown.jsx":"9","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Dropdown\\Card\\Card.jsx":"10","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Components\\Dropdown\\Dropdown.jsx":"11","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Components\\Dropdown\\Card\\Card.jsx":"12"},{"size":221,"mtime":1607036623477,"results":"13","hashOfConfig":"14"},{"size":1003,"mtime":1607101043499,"results":"15","hashOfConfig":"14"},{"size":2563,"mtime":1607092256755,"results":"16","hashOfConfig":"14"},{"size":1202,"mtime":1607099600878,"results":"17","hashOfConfig":"14"},{"size":126,"mtime":1607092061748,"results":"18","hashOfConfig":"14"},{"size":234,"mtime":1607285682441,"results":"19","hashOfConfig":"20"},{"size":1058,"mtime":1607285682428,"results":"21","hashOfConfig":"20"},{"size":126,"mtime":1607285682442,"results":"22","hashOfConfig":"20"},{"size":2563,"mtime":1607092256755,"results":"23","hashOfConfig":"20"},{"size":1202,"mtime":1607099600878,"results":"24","hashOfConfig":"20"},{"size":2708,"mtime":1607285682432,"results":"25","hashOfConfig":"20"},{"size":1245,"mtime":1607285682430,"results":"26","hashOfConfig":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1ilumr1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"f5eni9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},"C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\index.js",[],["57","58"],"C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\App.js",[],"C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\Dropdown\\Dropdown.jsx",["59"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport './styles.css'\r\nimport Card from './Card/Card'\r\n\r\n\r\nexport default ({opcoes, prompt, value, onChange}) => {\r\n\r\n    \r\n    const [open, setOpen] = useState(false)\r\n    const [query, setQuery] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const ref = useRef(null)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click',close)\r\n\r\n        return () => document.removeEventListener('click',close)\r\n\r\n    },[])\r\n\r\n    function close(e){\r\n\r\n        setOpen(e && e.target === ref.current)\r\n    }\r\n\r\n    function filter(options) {\r\n        return opcoes.filter((opcao) => \r\n            opcao.name.toLowerCase().indexOf(query.toLowerCase()) > -1)\r\n    }\r\n\r\n    function displayValue(){\r\n        if (query.length > 0) return query\r\n        if (value) return value.name\r\n        return ''\r\n    }\r\n\r\n    const closeModalHandler = () => setShow(false)\r\n  \r\n\r\n    return (\r\n        <>\r\n            <div className=\"dropdown\">\r\n                <div className=\"control\" onClick={()=> setOpen((prev) => !prev)}>\r\n                    <div className=\"selected-value\">\r\n                        <input \r\n                            type=\"text\" \r\n                            ref={ref} \r\n                            placeholder={value ? value.Name : prompt}\r\n                            value={displayValue()}\r\n                            onChange={e =>{\r\n                                setQuery(e.target.value)\r\n                                onChange(null)\r\n                            }}\r\n                            onClick={() => setOpen(prev => !prev)}\r\n                            />\r\n                        </div>\r\n                    <div className={`arrow ${open ? \"open\": null}`}/>\r\n\r\n                </div>\r\n                <div className={`options ${open ? \"open\": null}`}>\r\n                    {\r\n                        filter(opcoes).map((opcao) => (\r\n                        <div \r\n                        className={`option ${value === opcao ? 'selected' : null}`}\r\n                        onClick={()=>{\r\n                            setQuery('')\r\n                            onChange(opcao)\r\n                            setShow(true)\r\n                            setOpen(false)\r\n                        }}\r\n                        key={opcao.Code}>{opcao.name}</div> \r\n                                        ))}\r\n\r\n                </div>\r\n            </div>\r\n            \r\n            <Card value={value} show={show} close={closeModalHandler}/>\r\n        </>\r\n    )\r\n}","C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\Dropdown\\Card\\Card.jsx",["60"],"import React from 'react'\r\nimport './styles.css'\r\n\r\nexport default ({value, show, close}) => {  \r\n    if (value){\r\n        return (\r\n            <div className=\"modal-wrapper\" \r\n                style={{\r\n                    opacity: show ? '1' : '0'\r\n                }}>\r\n    \r\n                <div className=\"modal-header\">\r\n                    <p>Produto selecionado!</p>\r\n                    <span className=\"close-modal-btn\" onClick={close}>&#10005;</span>\r\n                </div>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-img\">\r\n                        <img src={value.media.source} alt=\"imagem do produto\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <h4>{`${value.name}`}</h4>\r\n                        <p dangerouslySetInnerHTML={{ __html: value.description }}></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                        <button className=\"btn-cancel\" onClick={close}>Fechar</button>\r\n                </div>\r\n\r\n    \r\n\r\n    \r\n            </div>\r\n        )\r\n        \r\n    }else {\r\n        return <></>\r\n    }\r\n    \r\n}","C:\\Users\\AVila\\Documents\\GitHub\\desafio\\src\\lib\\commerce.js",[],"C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\index.js",[],["61","62"],"C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\App.js",[],"C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\lib\\commerce.js",[],"C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Dropdown\\Dropdown.jsx",["63"],"C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Dropdown\\Card\\Card.jsx",["64"],"C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Components\\Dropdown\\Dropdown.jsx",["65"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport './styles.css'\r\nimport Card from './Card/Card'\r\n\r\n\r\nexport default ({opcoes, prompt, value, onChange}) => {\r\n\r\n    \r\n    const [open, setOpen] = useState(false)\r\n    const [query, setQuery] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const ref = useRef(null)\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('click',close)\r\n\r\n        return () => document.removeEventListener('click',close)\r\n\r\n    },[])\r\n\r\n    function close(e){\r\n\r\n        setOpen(e && e.target === ref.current)\r\n    }\r\n\r\n    function filter(opcoes) {\r\n        return opcoes.filter((opcao) => \r\n            opcao.name.toLowerCase().indexOf(query.toLowerCase()) > -1)\r\n    }\r\n\r\n    function displayValue(){\r\n\r\n        if (query.length >= 0) return query\r\n        if (value) return value.name\r\n        return ''\r\n\r\n        \r\n    }\r\n\r\n    const closeModalHandler = () => {\r\n        setShow(false)\r\n        onChange(null)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"dropdown\">\r\n                <div className=\"control\" onClick={()=> setOpen((prev) => !prev)}>\r\n                    <div className=\"selected-value\">\r\n                        <input\r\n                            id=\"myInput\"\r\n                            type=\"text\" \r\n                            ref={ref} \r\n                            placeholder={value ? value.name : prompt}\r\n                            value={displayValue()}\r\n                            onChange={e =>{\r\n                                setQuery(e.target.value)\r\n                                onChange(null)\r\n                            }}\r\n                            onClick={() => setOpen(prev => !prev)}\r\n                            />\r\n                        </div>\r\n                    <div className={`arrow ${open ? \"open\": null}`}/>\r\n\r\n                </div>\r\n                <div className={`options ${open ? \"open\": null}`}>\r\n                    {\r\n                        filter(opcoes).map((opcao) => (\r\n                        <div \r\n                        data-testid=\"display\" \r\n                        className={`option ${value === opcao ? 'selected' : null}`}\r\n                        onClick={()=>{\r\n                            setQuery('')\r\n                            onChange(opcao)\r\n                            setShow(true)\r\n                            setOpen(false)\r\n                        }}\r\n                        key={opcao.Code}>{opcao.name}</div> \r\n                                        ))}\r\n\r\n                </div>\r\n            </div>\r\n            \r\n            <Card value={value} show={show} close={closeModalHandler}/>\r\n        </>\r\n    )\r\n}","C:\\Users\\AVila\\Documents\\GitHub\\jst-job-challenges\\src\\Components\\Dropdown\\Card\\Card.jsx",["66"],"import React from 'react'\r\nimport './styles.css'\r\n\r\nexport default ({value, show, close}) => {  \r\n    if (value){\r\n        return (\r\n            <div className=\"modal-wrapper\" \r\n                style={{\r\n                    opacity: show ? '1' : '0'\r\n                }}>\r\n    \r\n                <div className=\"modal-header\">\r\n                    <p>Produto selecionado!</p>\r\n                    <span className=\"close-modal-btn\" onClick={close}>&#10005;</span>\r\n                </div>\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-img\">\r\n                        <img data-testid=\"media\" src={value.media.source} alt=\"imagem do produto\"/>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <h4 data-testid=\"name\">{`${value.name}`}</h4>\r\n                        <p data-testid=\"description\" dangerouslySetInnerHTML={{ __html: value.description }}></p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                        <button className=\"btn-cancel\" onClick={close}>Fechar</button>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }else {\r\n        return <></>\r\n    }\r\n}",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":6,"column":1,"nodeType":"73","endLine":80,"endColumn":2},{"ruleId":"71","severity":1,"message":"72","line":4,"column":1,"nodeType":"73","endLine":39,"endColumn":2},{"ruleId":"67","replacedBy":"74"},{"ruleId":"69","replacedBy":"75"},{"ruleId":"71","severity":1,"message":"72","line":6,"column":1,"nodeType":"73","endLine":80,"endColumn":2},{"ruleId":"71","severity":1,"message":"72","line":4,"column":1,"nodeType":"73","endLine":39,"endColumn":2},{"ruleId":"71","severity":1,"message":"72","line":6,"column":1,"nodeType":"73","endLine":89,"endColumn":2},{"ruleId":"71","severity":1,"message":"72","line":4,"column":1,"nodeType":"73","endLine":34,"endColumn":2},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["76"],["77"],"no-global-assign","no-unsafe-negation"]